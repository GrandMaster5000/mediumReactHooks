import React, {useEffect, useContext} from 'react';
import useFetch from 'hooks/useFetch';
import { Link, Redirect } from 'react-router-dom';
import Loading from 'components/loading';
import ErrorText from 'components/error';
import TagList from 'components/tagList';
import { CurrentUserContext } from 'contexts/currentUser';
import './index.css';


const Article = (props) => {
    const [currentUserState] = useContext(CurrentUserContext);
    const slug = props.match.params.slug;
    const apiUrl = `/articles/${slug}`
    const [{response: fetchArticleResponce, 
            error: fetchArticleError, 
            isLoading: fetchArticleIsLoading
            }, doFetch] = useFetch(apiUrl);
    const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl);
    const [isSuccessfullDelete, setIsSuccessfullDelete] = useState(false);

    const isAuthor = () => {
        if(!fetchArticleResponce || !currentUserState.isLoggedIn) {
            return false;
        }
        return fetchArticleResponce.article.author.username === currentUserState.currentUser.username
    }

    const deleteArticle = () => {
        doDeleteArticle({
            method: 'delete'
        });
    }

    useEffect(() => {
        if(!deleteArticleResponse) {
            return
        }
        setIsSuccessfullDelete(true);
    },[deleteArticleResponse])

    useEffect(() => {
        doFetch();
    }, []);

    if(isSuccessfullDelete) {
        return <Redirect to='/'/>
    }
    return (
        <div className="artcile-page">
            <div className="banner">
                {!fetchArticleIsLoading && response && (
                    <div className="container">
                        <h1>{fetchArticleResponce.article.title}</h1>
                        <div className="article-meta">
                           <Link to={`/profiles/${fetchArticleResponce.article.author.username}`}>
                               <img src={fetchArticleResponce.article.author.image} alt="" />
                           </Link>
                           <div className="info">
                                <Link to={`/profiles/${fetchArticleResponce.article.author.username}`}>
                                   {fetchArticleResponce.article.author.username}
                                </Link>
                                <span className="date">{fetchArticleResponce.article.updatedAt}</span>
                           </div>
                           {isAuthor() && (
                               <span>
                                   <Link className='btn btn-outline-secondary btn-sm' to={`${apiUrl}/edit`}>
                                       <i className="ion-edit"></i>
                                       Edit Article
                                   </Link>
                                   <button className='btn btn-outline-danger btn-sm' onClick={deleteArticle}>
                                       <i className="ion-trash-a"></i>
                                       Delete article
                                   </button>
                               </span>
                           )}
                        </div>
                    </div>
                )}
            </div>
            <div className="container page">
                {fetchArticleIsLoading && <Loading/>}
                {fetchArticleError && <ErrorText/>}
                {!fetchArticleIsLoading && fetchArticleResponce && (
                    <>
                        <div className="row article-content">
                            <div className="col-xs-12">
                                <div>
                                    <p>{fetchArticleResponce.article.body}</p>
                                </div>
                                <TagList tags={fetchArticleResponce.article.tagList}/>
                            </div>
                        </div>
                        <hr />
                        <div className="article-actions">
                            <div className="article-meta">
                                <Link to={`/profiles/${fetchArticleResponce.article.author.username}`}>
                                    <img src={fetchArticleResponce.article.author.image} alt="" />
                                </Link>
                                <div className="info">
                                    <Link to={`/profiles/${fetchArticleResponce.article.author.username}`}>
                                    {fetchArticleResponce.article.author.username}
                                    </Link>
                                    <span className="date">{fetchArticleResponce.article.updatedAt}</span>
                                </div>
                                {isAuthor() && (
                                    <span>
                                        <Link className='btn btn-outline-secondary btn-sm' to={`${apiUrl}/edit`}>
                                            <i className="ion-edit"></i>
                                            Edit Article
                                        </Link>
                                        <button className='btn btn-outline-danger btn-sm' onClick={deleteArticle}>
                                            <i className="ion-trash-a"></i>
                                            Delete article
                                        </button>
                                    </span>
                                )}
                            </div>
                        </div>
                        {!currentUserState.isLoggedIn && (
                            <div className="row">
                                <div className="col-xs-12 col-md-8 offset-md-2">
                                    <p>
                                        <Link to='/login'>Sign in</Link>
                                        &nbsp;or&nbsp;  
                                        <Link to='/register'>sign up</Link>
                                        &nbsp;to add comments on this article.
                                    </p>
                                </div>
                            </div>
                        )}
                    </>
                )}
            </div>
        </div>
    )
}

export default Article;