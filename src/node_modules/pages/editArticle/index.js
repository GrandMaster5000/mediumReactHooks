import React, { useEffect, useState, useContext } from 'react';
import ArticleForm from 'components/articleForm';
import useFetch from 'hooks/useFetch';
import { Redirect } from 'react-router';
import { CurrentUserContext } from 'contexts/currentUser';

const EditArticle = ({match}) => {
    const [initValues, setInitValues] = useState(null);
    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false);
    const [currentUserState] = useContext(CurrentUserContext);
    const slug = match.params.slug;
    const apiUrl = `/articles/${slug}`;
    const [{response: fetchArticleResponce}, doArticleFetch] = useFetch(apiUrl);
    const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl);

    const handleSubmit = article => {
        doUpdateArticle({
            method: 'put',
            data: {
                article
            }
        });
    }

    useEffect(() => {
        doArticleFetch();
    }, [])

    useEffect(() => {
        if(!fetchArticleResponce) {
            return;
        }

        setInitValues({
            title: fetchArticleResponce.article.title,
            description: fetchArticleResponce.article.description,
            body: fetchArticleResponce.article.body,
            tagList: fetchArticleResponce.article.tagList
        })
    }, [fetchArticleResponce])
    
    useEffect(() => {
        if(!updateArticleResponse) {
            return;
        }
        setIsSuccessfullSubmit(true);
    }, [updateArticleResponse])

    if(currentUserState.isLoggedIn === false) {
        return  <Redirect to='/'/>
    }

    if(isSuccessfullSubmit) {
        return <Redirect to={`/articles/${slug}`}/>
    }

    return (
        <ArticleForm
            onSubmit={handleSubmit}
            errors={(updateArticleError && updateArticleError.errors) || {}}
            initValues={initValues}
        />
    )
}

export default EditArticle;
